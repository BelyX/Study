1.        回调函数是什么东西？
2.        回调函数怎么开发，怎么使用？
3.        回调函数的作用，应该在什么情况下使用？
 
带着问题来学习，有目的！呵呵，个人经验。
打开baidu.com、google.cn搜索了好多资料，如下：
顺便提一下，某君的一个签名很让我佩服：1好好活着，因为我们会死很久。2五千年的文明 两百年的无奈
 
第一个问题：
*******************************************************************************
其实回调就是一种利用函数指针进行函数调用的过程.  
为什么要用回调呢?比如我要写一个子模块给你用,   来接收远程socket发来的命令.当我接收到命令后,   需要调用你的主模块的函数,   来进行相应的处理.但是我不知道你要用哪个函数来处理这个命令,     我也不知道你的主模块是什么.cpp或者.h,   或者说,   我根本不用关心你在主模块里怎么处理它,   也不应该关心用什么函数处理它......   怎么办?
使用回调!
—— lone wolf
 
使用回调函数实际上就是在调用某个函数（通常是API函数）时，将自己的一个函数（这个函数为回调函数）的地址作为参数传递给那个函数。而那个函数在需要的时候，利用传递的地址调用回调函数，这时你可以利用这个机会在回调函数中处理消息或完成一定的操作。
—— 某专家
 
回调函数，就是由你自己写的。你需要调用另外一个函数，而这个函数的其中一个参数，就是你的这个回调函数名。这样，系统在必要的时候，就会调用你写的回调函数，这样你就可以在回调函数里完成你要做的事。
—— 绿叶
 
http://hi.baidu.com/zhuyipeng/blog/item/863fefdb7c736c63d1164eec.html 是一篇比较好的文章。
 
什么是回调函数?
　　回调函数是应用程序提供给Windows系统DLL或其它DLL调用的函数，一般用于截获消息、获取系统信息或处理异步事件。应用程序把回调函数的地址指针告诉DLL，而DLL在适当的时候会调用该函数。回调函数必须遵守事先规定好的参数格式和传递方式，否则DLL一调用它就会引起程序或系统的崩溃。通常情况下，回调函数采用标准WindowsAPI的调用方式，即__stdcall，当然，DLL编制者可以自己定义调用方式，但客户程序也必须遵守相同的规定。在__stdcall方式下，函数的参数按从右到左的顺序压入堆栈，除了明确指明是指针或引用外，参数都按值传递，函数返回之前自己负责把参数从堆栈中弹出。
　　理解回调函数!
—— jufengfeng
 
Function Pointers provide the concept of callback functions.
—— newty.de
*******************************************************************************
看了这么多的资料，我只将每位的定义总结一下就一句话：回调函数就是函数指针的一种用法。
在部分资料上，大量讨论了回调函数怎么被调用，到底被谁调用，还有好多的图形，我认为都没有看到问题的本质。
 
 
第二个问题：
*********************************************************************
我实现了一个很简单的回调函数。
#include <stdio.h>
 
void printWelcome(int len)
{
       printf("欢迎欢迎 -- %d/n", len);
}
 
void printGoodbye(int len)
{
       printf("送客送客 -- %d/n", len);
}
 
void callback(int times, void (* print)(int))
{
       int i;
       for (i = 0; i < times; ++i)
       {
              print(i);
       }
       printf("/n我不知道你是迎客还是送客!/n/n");
}
void main(void)
{
       callback(10, printWelcome);
       callback(10, printGoodbye);
       printWelcome(5);
}
*******************************************************************************
上面的代码没有被任何系统函数调用，说明那些东西只是撒撒土迷迷路人眼而已。还有面相对象编程时，用class给封装起来也是掩人耳目，不要被外表所迷惑。
 
 
第三个问题：
*********************************************************************
用过STL的人都知道，在STL中众多算法和程序都用到回调函数，这实现了一种策略。只要任何符合我的标准的函数和计算都可以用我这个公式。你可以实现各种各样的回调函数，只要符合我的格式就能用。
就上面的程序来说，你只要函数格式符合cllback第二个参数的格式不论你给别人做饭、铺床叠被都可以正常工作。这就是回调的作用，把回调实现留给别人。
这是一个用法。
 
有一位朋友用分层的概念来解释了回调机制：callback函数为B层，main函数和print*函数为A层，A层调用了B层的回调函数callmeback，而B层的回调函数调用了A层的实现函数print*。说白了B层就是一个接口。
 
